name: RenderRobActions

on: [push]

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Set up Python 3.10
        uses: actions/setup-python@v3
        with:
          python-version: "3.10"

      - name: Cache Python dependencies
        uses: actions/cache@v3
        env:
          cache-name: cache-pip
        id: cache-pip
        with:
          path: |
            ~/.cache/pip
            # How to handle incremental updates of Python versions?
            /opt/hostedtoolcache/Python/3.10.12/x64/lib/python3.10
          key: ${{ runner.os }}-pip-${{ hashFiles('requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-${{ hashFiles('requirements.txt') }}
            ${{ runner.os }}-pip-
            ${{ runner.os }}-
      - name: Cache apt dependencies
        uses: awalsh128/cache-apt-pkgs-action@latest
        with:
          packages: libgl1-mesa-dev

      - name: Install dependencies
        run: |
          sudo apt update
          # Undocumented Pyside6 system dependencies
          sudo apt install -y \
                      libgl1-mesa-dev\
                      libegl1-mesa-dev\
                      libgl1 \
                      libegl1 \
                      libfontconfig1-dev libfreetype6-dev \
                      libx11-dev libx11-xcb-dev libxext-dev libxfixes-dev \
                      libxi-dev libxrender-dev \
                      libxkbcommon-dev libxkbcommon-x11-dev libatspi2.0-dev \
                      libopengl0 '^libxcb.*-dev'
                      # libdbus-glib-1-2

          # Nuitka dependencies
          sudo apt install -y \
                      ccache \
                      clang \
                      patchelf
          sudo apt install -y --reinstall libxcb-xinerama0
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          echo testing Blender version
          python -c 'import bpy;print(bpy.__file__)'
          python -m site

      - name: Build proto bindings
        run: |
          wget https://github.com/protocolbuffers/protobuf/releases/download/v24.0/protoc-24.0-linux-x86_64.zip

          unzip protoc-24.0-linux-x86_64.zip
          sudo cp bin/protoc /usr/local/bin/protoc
          protoc --version
          protoc --proto_path=proto/ --python_out=proto/ proto/state.proto
          protoc --proto_path=proto/ --python_out=proto/ proto/cache.proto

      - name: Analysing the code with pylint
        run: |
          pylint $(git ls-files '*.py') --extension-pkg-whitelist=PySide6 --indent-string='  ' --disable="R, no-member, import-error, no-name-in-module" --generated-members="proto*,bpy*"

      - name: Run unittests
        run: |
          test_files=$(find . -name '*_test.py')
          for file in $test_files; do
              echo "Running tests in $file"
              python -m unittest "$file"
          done
