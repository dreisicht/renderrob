"""Class to build a shot name from the render job."""

from proto import state_pb2
import os


class ShotNameBuilder:
  """Class to build a shot name from the render job."""

  def __init__(self, render_job: state_pb2.render_job()) -> None:
    self.render_job = render_job

  def get_shotname(self):
    # preview or hq suffix
    if self.hq:
      self.quality_state_string = "hq"
    else:
      self.quality_state_string = "pv"

    # get blender file name without .blend

    self.view_layer_dir = ",".join(
        self.view_layer).replace("View Layer", "Vl")

    filename = self.blendpath.split("/")[-1][:-6]
    self.shotname = (filename + "-" +
                     self.active_camera.replace("Camera", "Cam") + "-" +
                     #  str(self.startframe) + "-" +
                     #  str(self.endframe) + "-" +
                     str(self.scene.replace("Scene", "Sc")) + "-" +
                     str(self.view_layer_dir) + "-" +
                     self.quality_state_string + "-v")
    self.shotname = self.shotname.replace(" ", "_")

  def assemble_frame_path(self):
    return (self.frame_render_folder + self.shotname + "$$" +
            "-" + "####." + self.file_format)

  def get_frame_path(self):
    '''inputs:
    self.renderpath
    self.shotname
    self.endframe

    output:
    *self.full_frame_path*

    full_frame_path is a string, which points either to a folder (animation rendering),
    or to a single image (still image rendering)

    '''
    self.shot_iter_num = 1

    # Different folder for still images and animations
    # If still image rendering
    if self.endframe == "" and self.startframe != "":
      self.frame_render_folder = self.renderpath + "stills/"
    # if animation rendering
    else:
      self.frame_render_folder = self.renderpath + self.shotname + "$$/"

    self.full_frame_path_no_ver = self.assemble_frame_path()

    # while image with given iteration number ist existing, raise iteration number
    while os.path.exists(self.full_frame_path_no_ver.replace("$$", str(self.shot_iter_num).zfill(2)).replace("####", str(self.startframe).zfill(4))):
      self.shot_iter_num = self.shot_iter_num + 1

    if not self.new_version and self.shot_iter_num > 1:
      self.shot_iter_num = self.shot_iter_num - 1

    # update full_frame_path with iteration number
    self.full_frame_path = self.full_frame_path_no_ver.replace(
        "$$", str(self.shot_iter_num).zfill(2))
